generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid())
  name         String
  email        String    @unique
  passwordHash String
  role         String    @default("customer") // "customer" | "admin"
  bookings     Booking[] 
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Venue {
  id           String    @id @default(uuid())
  name         String
  description  String?
  type         String    // "hotel" | "restaurant" | "hall"
  location     String
  capacity     Int
  amenities    String[]  // Postgres array
  openingHours String?
  tables       Table[]
  bookings     Booking[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Table {
  id          String   @id @default(uuid())
  venueId     String
  venue       Venue    @relation(fields: [venueId], references: [id])
  number      String
  capacity    Int
  isAvailable Boolean  @default(true)
  bookings    Booking[]
}

model Booking {
  id             String   @id @default(uuid())
  userId         String
  user           User     @relation(fields: [userId], references: [id])
  venueId        String
  venue          Venue    @relation(fields: [venueId], references: [id])
  tableId        String?  // optional for halls/rooms
  table          Table?   @relation(fields: [tableId], references: [id])
  startTime      DateTime
  endTime        DateTime
  guests         Int?
  specialRequest String?
  status         String   @default("pending") // pending | confirmed | canceled
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}